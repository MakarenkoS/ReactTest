{"version":3,"sources":["components/Pages/Json/JsonPage.module.css","components/Navbar/Navbar.module.css","components/Pages/Login/LoginPage.module.css","components/Pages/Courses/CoursesPage.module.css","Redux/types.ts","Redux/actions.ts","components/Navbar/Navbar.tsx","Redux/authReducer.ts","components/Pages/Login/LoginPage.tsx","api/api.js","Redux/jsonPageReducer.ts","components/common/Paginator.tsx","components/common/Preloader.tsx","components/Pages/Json/JsonPageItem.tsx","components/Pages/Json/JsonPage.tsx","components/Pages/Other/Other.tsx","Redux/coursesPageReducer.ts","components/common/utils.tsx","components/Pages/Courses/CoursePageCalendar.tsx","components/Pages/Courses/CoursePageExchange.tsx","components/Pages/Courses/CoursePageTableItem.tsx","components/Pages/Courses/CoursePageTable.tsx","components/Pages/Courses/CoursesPage.tsx","components/Pages/ByteToFloat/ByteToFloat.tsx","App.tsx","Routes.tsx","reportWebVitals.js","Redux/store.ts","index.tsx"],"names":["module","exports","USER_LOGIN","USER_LOGOUT","SET_DATA","SET_FILTER","CLEAR_FILTER","DELETE_ITEM","SET_IS_FETCHING__JSON","SET_COURSES","SET_COURSES_DATE","CLEAR_COURSES","SET_IS_FETCHING","dateOptions","year","month","day","weekday","timezone","hour","minute","second","authActions","type","jsonPageActions","data","payload","filter","filterString","isFetching","id","coursesPageActions","coursesData","date","Navbar","dispatch","useDispatch","className","onClick","classes","icon","to","initialState","isAuth","LoginPage","useState","name","password","field","setField","useEffect","window","M","updateTextFields","cn","login","placeholder","data-length","value","onChange","e","target","htmlFor","console","log","toast","html","instance","axios","baseURL","postApi","limit","get","response","Error","coursesInstance","coursesApi","selectedDate","jsonArray","portionSize","portionCount","Paginator","currentPage","setCurrentPage","pages","totalPageCount","Math","ceil","i","push","canPageLeft","canPageRight","onArrowClick","dataset","arrrow","href","data-arrow","map","p","Preloader","style","textAlign","marginTop","highlightStyle","color","background","TitleRender","title","useSelector","state","jsonPage","highlightedString","highlightedStringStart","indexOf","highlightedStringEnd","length","slice","JsonPageItem","idNumber","item","checkbox","deleteJsonItem","JsonPage","React","memo","posts","count","getState","a","includes","currentTarget","required","userId","Other","valutes","getCourses","Date","Valute","error","ArrowIcon","diff","CoursePageCalendar","setSelectedDate","formatDate","parse","toLocaleString","CoursePageExchange","valuteKeys","rublesAmount","setRublesAmount","valutesAmount","setValutesAmount","selectedValute","setSelectedValute","course","nominal","valutesCourse","setValutesCourse","valute","Number","toFixed","key","find","Name","Value","Nominal","valuteName","readOnly","CoursePageTableItem","ticker","previousValue","CoursePageTable","CharCode","Previous","ID","Courses","coursesPage","split","join","buildDateString","renderView","Object","keys","styles","nodataText","ByteToFloat","buffer","ArrayBuffer","f32","Float32Array","ui8","Uint8Array","byteArray","setByteArray","floatNumber","setFloatNumber","isFloat","setIsFloat","setBytes","setBytesFromFloat","parseFloat","toString","forEach","parseInt","calculateFloat","action","App","document","addEventListener","elems","querySelectorAll","Collapsible","init","auth","routes","path","useRoutes","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","store","createStore","compose","applyMiddleware","thunk","__REDUX_DEVTOOLS_EXTENSION__","f","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5ebb7892.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"JsonPage_checkbox__35vd1\",\"item\":\"JsonPage_item__WPunb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"icon\":\"Navbar_icon__3d5MH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"LoginPage_login__1f7We\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nodataText\":\"CoursesPage_nodataText__12Qps\"};","export const USER_LOGIN = 'auth/USER_LOGIN'\r\nexport const USER_LOGOUT = 'auth/USER_LOGOUT'\r\n\r\nexport const SET_DATA = 'jsonPage/SET_DATA'\r\nexport const SET_FILTER = 'jsonPage/SET_FILTER'\r\nexport const CLEAR_FILTER = 'jsonPage/CLEAR_FILTER'\r\nexport const DELETE_ITEM = 'jsonPage/DELETE_ITEM'\r\nexport const SET_IS_FETCHING__JSON = 'jsonPage/SET_IS_FETCHING'\r\n\r\nexport const SET_COURSES = 'coursesPage/SET_COURSES'\r\nexport const SET_COURSES_DATE = 'coursesPage/SET_COURSES_DATE'\r\nexport const CLEAR_COURSES = 'coursesPage/CLEAR_COURSES'\r\nexport const SET_IS_FETCHING = 'coursesPage/SET_IS_FETCHING'\r\n\r\nexport type AuthDataType = {\r\n  name: string\r\n  password: string\r\n}\r\n\r\nexport type JsonDataType = {\r\n  id: number\r\n  title: string\r\n}\r\n\r\ninterface Valute  {\r\n  CharCode: string,\r\n  ID: string\r\n  Name: string\r\n  Nominal: number\r\n  NumCode: string\r\n  Previous: number\r\n  Value: number\r\n}\r\n\r\nexport interface Valutes {\r\n  [key: string]: Valute\r\n}\r\n\r\ninterface dateOptionsInterface {\r\n  year: \"numeric\" | \"2-digit\" | undefined\r\n  month: \"numeric\" | \"2-digit\" | \"long\" | \"short\" | \"narrow\" | undefined\r\n  day: \"numeric\" | \"2-digit\" | undefined\r\n  weekday:  \"long\" | \"short\" | \"narrow\" | undefined\r\n  timezone: string\r\n  hour: \"numeric\" | \"2-digit\" | undefined\r\n  minute: \"numeric\" | \"2-digit\" | undefined\r\n  second: \"numeric\" | \"2-digit\" | undefined\r\n}\r\n\r\nexport const dateOptions: dateOptionsInterface = {\r\n  year: \"numeric\",\r\n  month: \"long\",\r\n  day: \"numeric\",\r\n  weekday: \"long\",\r\n  timezone: \"UTC+3\",\r\n  hour: \"numeric\",\r\n  minute: \"numeric\",\r\n  second: \"numeric\",\r\n};","import { SET_DATA, USER_LOGIN, USER_LOGOUT, JsonDataType, SET_FILTER, CLEAR_FILTER, SET_COURSES, SET_COURSES_DATE, CLEAR_COURSES, SET_IS_FETCHING, DELETE_ITEM, SET_IS_FETCHING__JSON } from \"./types\"\r\n\r\nexport const authActions = {\r\n  logout: () => ({ type: USER_LOGOUT } as const),\r\n  login: () => ({ type: USER_LOGIN } as const)\r\n}\r\n\r\nexport const jsonPageActions = {\r\n  setData: (data:  Array<JsonDataType>) => ({ type: SET_DATA, payload: data } as const),\r\n  setFilter: (filter: string) => ({type: SET_FILTER, filterString: filter} as const ),\r\n  clearFilter: () => ({type: CLEAR_FILTER}) as const,\r\n  setIsFetching: (isFetching: boolean) => ({ type: SET_IS_FETCHING__JSON, isFetching} as const),\r\n  deleteItem: (id: number) => ({type: DELETE_ITEM, id} as const )\r\n}\r\n\r\nexport const coursesPageActions = {\r\n  setCourses: (coursesData: any) => ({ type: SET_COURSES, payload: coursesData} as const),\r\n  setCoursesDate: (date: string) => ({ type: SET_COURSES_DATE, payload: date} as const),\r\n  clearCourses: () => ({ type: CLEAR_COURSES} as const),\r\n  setIsFetching: (isFetching: boolean) => ({ type: SET_IS_FETCHING, isFetching} as const),\r\n}\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport classes from './Navbar.module.css'\r\nimport { useDispatch } from 'react-redux'\r\nimport { authActions } from '../../Redux/actions'\r\n\r\ntype PropsType = {\r\n  isAuth: boolean\r\n} \r\n\r\nexport const Navbar:React.FC<PropsType> = () => {\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  function userLogout() {\r\n    dispatch(authActions.logout())\r\n  }\r\n\r\n  return (\r\n    <nav>\r\n      <div className=\"nav-wrapper blue darken-4 \">\r\n        <span onClick={userLogout} className={`brand-logo right ${classes.icon}`}> <i className=\"large material-icons\">directions_run</i></span>\r\n        <ul id=\"nav-mobile\" className=\"left hide-on-med-and-down\">\r\n          <li><NavLink to=\"/Json\"> Get JSON </NavLink></li>\r\n          <li><NavLink to=\"/Courses\">Get Courses </NavLink></li>\r\n          <li><NavLink to=\"/Byte2Float\">Byte2Float </NavLink></li>\r\n          <li><NavLink to=\"/Other\">Other </NavLink></li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  )\r\n} \r\n","import { authActions } from \"./actions\"\r\nimport { BaseThunkType, InferActionsTypes } from \"./store\"\r\nimport { AuthDataType, USER_LOGIN, USER_LOGOUT } from \"./types\"\r\n\r\n\r\nexport const initialState = {\r\n  isAuth: true,\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\ntype ActionTypes = InferActionsTypes<typeof authActions>\r\ntype ThunkType = BaseThunkType<ActionTypes>\r\n// type ThunkType = ThunkAction<void, AppStateType, unknown, ActionTypes>\r\n\r\n\r\nexport const authReducer = (state = initialState, action: ActionTypes): InitialStateType => {\r\n  switch(action.type) {\r\n    case USER_LOGIN: \r\n      return {...state, isAuth: true}\r\n    case USER_LOGOUT: \r\n      return {...state, isAuth: false}\r\n    default: \r\n      return {...state}\r\n  }\r\n}\r\n\r\n//-----------------------------------------------Thunks------------------------------------------\r\n\r\nexport const authorizeUser = (data: AuthDataType): ThunkType => {\r\n  return  (dispatch) => {\r\n    if (data.name === 'I') {\r\n      dispatch(authActions.login())\r\n    } else {\r\n      //@ts-ignore\r\n      window.M.toast({html: 'Incorrect name or pass'})\r\n    }\r\n  }\r\n}","import React, { useEffect, useState } from 'react'\r\nimport classes from './LoginPage.module.css'\r\nimport { useDispatch } from 'react-redux'\r\nimport { authorizeUser } from '../../../Redux/authReducer'\r\n\r\n\r\nexport let LoginPage = () => {\r\n\r\n  type HTMLElementEvent<T extends HTMLElement> = Event & {\r\n    target: T;\r\n  }\r\n  \r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const changeHandler = (e: HTMLElementEvent<HTMLButtonElement> & React.ChangeEvent<HTMLInputElement>)  => {\r\n    setField({ ...field, [e.target.name]: e.target.value })\r\n  }\r\n\r\n  const [field, setField] = useState({\r\n    name: '',\r\n    password: ''\r\n  })\r\n\r\n  useEffect(() => {\r\n    //@ts-ignore\r\n    window.M.updateTextFields()\r\n  }, [])\r\n\r\n\r\n  function LoginUser() {\r\n    console.log('thunk', field.name)\r\n    dispatch(authorizeUser(field))\r\n  }\r\n\r\n  const cn = \"card blue darken-3 \" + classes.login\r\n  return (\r\n    <div className={cn} >\r\n      <div className=\"card-content white-text\">\r\n\r\n        <div className=\"row\">\r\n          <div className=\"input-field col s6\">\r\n            <input id=\"input_name\" type=\"text\" name=\"name\" placeholder=\"Enter login\" data-length=\"10\"\r\n              value={field.name} onChange={changeHandler}\r\n            >\r\n\r\n            </input>\r\n            <label htmlFor=\"input_name\">Login</label>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"input-field col s6\">\r\n            <input id=\"input_password\" type=\"text\" name=\"password\" placeholder=\"Enter password\" data-length=\"10\"></input>\r\n            <label htmlFor=\"input_password\">Password</label>\r\n          </div>\r\n        </div>\r\n        <button\r\n          className=\"btn yellow darken-4\"\r\n          onClick={LoginUser}\r\n        >\r\n          Войти\r\n        </button>\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import * as axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'https://jsonplaceholder.typicode.com/'\r\n})\r\n\r\nexport const postApi = {\r\n  async getPosts(limit) {\r\n    try {\r\n      const response = await instance.get(`todos/?_limit=${limit}`)\r\n      return response.data\r\n    } catch (error) {\r\n      console.log('This is:',error)\r\n      throw new Error('Some error')\r\n    }\r\n  }\r\n}\r\n\r\n\r\nconst coursesInstance = axios.create({\r\n  baseURL: 'https://www.cbr-xml-daily.ru/',\r\n})\r\n\r\nexport const coursesApi = {\r\n  async getCourses(selectedDate) {\r\n    try {\r\n      const response = await coursesInstance.get(selectedDate + '/daily_json.js')\r\n        return response.data\r\n    } catch {\r\n      console.log('Some error')\r\n    }\r\n  }\r\n}","import { postApi } from \"../api/api\"\r\nimport { jsonPageActions } from \"./actions\"\r\nimport { SET_DATA, JsonDataType, SET_FILTER, CLEAR_FILTER, DELETE_ITEM, SET_IS_FETCHING, SET_IS_FETCHING__JSON } from \"./types\"\r\nimport { InferActionsTypes, BaseThunkType } from \"./store\"\r\n\r\nexport const initialState = {\r\n  jsonArray: [] as Array<JsonDataType>,\r\n  portionSize: 5,\r\n  portionCount: 16,\r\n  isFetching: false,\r\n  filter: '',\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\ntype ActionTypes = InferActionsTypes<typeof jsonPageActions>\r\ntype ThunkType = BaseThunkType<ActionTypes>\r\n\r\nexport const jsonPageReducer = (state = initialState, action: ActionTypes): InitialStateType => {\r\n  switch(action.type) {\r\n    case SET_DATA: {\r\n      return {...state, jsonArray: action.payload }\r\n    }\r\n    case SET_FILTER: {\r\n      return {...state, filter: action.filterString}\r\n    }\r\n    case CLEAR_FILTER: {\r\n      return {...state, filter: ''}\r\n    }\r\n    case DELETE_ITEM: {\r\n      return {...state, jsonArray: state.jsonArray.filter((i) => action.id !== i.id )}\r\n    }\r\n    case SET_IS_FETCHING__JSON: {\r\n      return {...state, isFetching: action.isFetching}\r\n    }\r\n    default: \r\n      return {...state}\r\n  }\r\n}\r\n\r\n\r\n//-----------------------------------------------Thunks------------------------------------------\r\n\r\n\r\nexport const getPosts =  ():ThunkType => {\r\n  return async (dispatch, getState) => {\r\n    dispatch(jsonPageActions.setIsFetching(true))\r\n    const data: Array<JsonDataType>= await postApi.getPosts(getState().jsonPage.portionCount)\r\n    dispatch(jsonPageActions.setIsFetching(false))\r\n    dispatch(jsonPageActions.setData(data))\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\n\r\ntype PropsType = {\r\n  portionCount: number\r\n  portionSize: number\r\n  currentPage: number\r\n  setCurrentPage: (page: number) => void\r\n}\r\n\r\ntype HTMLElementEvent<T extends HTMLElement> = Event & {\r\n  target: T;\r\n}\r\n\r\n\r\nexport const Paginator: React.FC<PropsType> = ({ portionCount, portionSize, currentPage, setCurrentPage }) => {\r\n  let cn\r\n  let pages = []\r\n  const totalPageCount = Math.ceil(portionCount / portionSize)\r\n\r\n  for (let i = 1; i <= totalPageCount; i++) {\r\n    pages.push(i)\r\n  }\r\n\r\n  function canPageLeft() {\r\n    return currentPage > 1\r\n  }\r\n\r\n  function canPageRight() {\r\n    return currentPage < totalPageCount\r\n  }\r\n\r\n\r\n  function onArrowClick(e: HTMLElementEvent<HTMLButtonElement> & React.MouseEvent<HTMLAnchorElement, MouseEvent>) {\r\n    switch (e.target.dataset.arrrow) {\r\n      case 'left':\r\n        if (canPageLeft()) {\r\n          setCurrentPage(currentPage - 1)\r\n        }\r\n        break\r\n      case 'right':\r\n        if (canPageRight()) {\r\n          setCurrentPage(currentPage + 1)\r\n        }\r\n        break\r\n      default:\r\n    }\r\n  }\r\n\r\n  return (\r\n    <ul className=\"pagination\">\r\n\r\n      <li className={canPageLeft() === true ? \"waves-effect\" : \"disabled\"}>\r\n        <a href=\"#!\" onClick={onArrowClick}><i data-arrow=\"left\" className=\"material-icons\">chevron_left</i></a>\r\n      </li>\r\n\r\n      {pages.map(p => {\r\n        currentPage === p ? cn = \"active\" : cn = \"waves-effect\"\r\n        return <li className={cn} key={p} onClick={() => setCurrentPage(p)}><a href=\"#!\">{p}</a></li>\r\n      })}\r\n\r\n      <li className={canPageRight() === true ? \"waves-effect\" : \"disabled\"}>\r\n        <a href=\"#!\" onClick={onArrowClick}><i data-arrow=\"right\" className=\"material-icons\">chevron_right</i></a>\r\n      </li>\r\n    </ul>\r\n  )\r\n}","export const Preloader = () => {\r\n  return (\r\n    <div style= {{textAlign: 'center', marginTop: '100px'}}>\r\n        <div className=\"preloader-wrapper big active \">\r\n          <div className=\"spinner-layer spinner-blue-only\">\r\n            <div className=\"circle-clipper left\">\r\n              <div className=\"circle\"></div>\r\n            </div><div className=\"gap-patch\">\r\n              <div className=\"circle\"></div>\r\n            </div><div className=\"circle-clipper right\">\r\n              <div className=\"circle\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  )\r\n}","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { jsonPageActions } from \"../../../Redux/actions\";\r\nimport { AppStateType } from \"../../../Redux/store\";\r\nimport classes from \"./JsonPage.module.css\";\r\n\r\n\r\ntype PropsType = {\r\n  id: number\r\n  idNumber: number\r\n  title: string\r\n};\r\n\r\nlet highlightStyle = {\r\n  color: \"red\",\r\n  background: \"yellow\",\r\n}\r\n\r\nconst TitleRender: React.FC<{ title: string }> = ({ title }): any => {\r\n  const filterString = useSelector(\r\n    (state: AppStateType) => state.jsonPage.filter\r\n  );\r\n\r\n  if (!!filterString) {\r\n    let highlightedString = title;\r\n    const highlightedStringStart = title.indexOf(filterString);\r\n    const highlightedStringEnd = highlightedStringStart + filterString.length;\r\n\r\n    return (\r\n      <>\r\n        {highlightedString.slice(0, highlightedStringStart)}\r\n        <span style={highlightStyle}>\r\n          {highlightedString.slice(\r\n            highlightedStringStart,\r\n            highlightedStringEnd\r\n          )}\r\n        </span>\r\n        {highlightedString.slice(highlightedStringEnd)}\r\n      </>\r\n    );\r\n  }\r\n\r\n  return <>{title}</>;\r\n};\r\n\r\nexport const JsonPageItem: React.FC<PropsType> = ({ id, idNumber, title }) => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const deleteJsonItem = (id: number) => {\r\n    dispatch(jsonPageActions.deleteItem(id))\r\n  }\r\n\r\n  return (\r\n    <p className={classes.item}>\r\n      <label className={classes.checkbox}>\r\n        <input type=\"checkbox\" />\r\n        <span>\r\n          <strong>{idNumber} </strong>\r\n          <TitleRender title={title} />\r\n        </span>\r\n      </label>\r\n\r\n      <button className=\"waves-effect waves-light blue-grey darken-2 btn\" onClick={() => deleteJsonItem(id)}>\r\n        <i className=\"material-icons\">clear</i>\r\n      </button>\r\n    </p>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { jsonPageActions } from \"../../../Redux/actions\";\r\nimport { getPosts } from \"../../../Redux/jsonPageReducer\";\r\nimport { AppStateType } from \"../../../Redux/store\";\r\nimport { Paginator } from \"../../common/Paginator\";\r\nimport { Preloader } from \"../../common/Preloader\";\r\nimport { JsonPageItem } from \"./JsonPageItem\";\r\n\r\n\r\ntype PropTypes = {};\r\n\r\nexport const JsonPage: React.FC<PropTypes> = React.memo(() => {\r\n  const dispatch = useDispatch();\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  let posts = useSelector((state: AppStateType) => state.jsonPage.jsonArray);\r\n  \r\n  const portionSize = useSelector(\r\n    (state: AppStateType) => state.jsonPage.portionSize\r\n  );\r\n  const filterString = useSelector(\r\n    (state: AppStateType) => state.jsonPage.filter\r\n  );\r\n\r\n  const isFetching = useSelector(\r\n    (state: AppStateType) => state.jsonPage.isFetching\r\n  )\r\n\r\n  let count:number = 0;\r\n\r\n  useEffect(() => {\r\n    dispatch(getPosts());\r\n    count = posts.length\r\n\r\n  }, [dispatch]);\r\n\r\n  useEffect( () => {\r\n    setCurrentPage(1)\r\n    console.log(posts.length)\r\n  }, [filterString, posts.length ])\r\n\r\n\r\n\r\n  if (posts.length === 0) {\r\n    if (isFetching) {\r\n      return <Preloader />\r\n    }\r\n    return (\r\n    <h3>No data</h3>\r\n    )\r\n  }\r\n\r\n  const setFilterChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    dispatch(jsonPageActions.setFilter(e.currentTarget.value))\r\n  }\r\n\r\n  const clearFilter = () => {\r\n    dispatch(jsonPageActions.clearFilter())\r\n  }\r\n  let newPosts =  posts.filter((p) => {\r\n    return p.title.includes(filterString)\r\n  }) \r\n\r\n  return (\r\n    <div>\r\n      <nav>\r\n        <div className=\"nav-wrapper  grey lighten-1\">\r\n          <form>\r\n            <div className=\"input-field\">\r\n              <input\r\n                id=\"search\"\r\n                onChange={setFilterChange}\r\n                value={filterString}\r\n                type=\"search\"\r\n                required\r\n              ></input>\r\n              <label className=\"label-icon\" htmlFor=\"search\">\r\n                <i className=\"material-icons\">search</i>\r\n              </label>\r\n              <i className=\"material-icons\" onClick = {clearFilter}>close</i>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </nav>\r\n      \r\n      {posts\r\n        .filter((p) => {\r\n          return p.title.includes(filterString)\r\n        }) \r\n        .map((p) => {\r\n          return { userId: p.id, id: ++count, title: p.title };\r\n        })\r\n        .filter(\r\n          (p) =>\r\n            p.id <= currentPage * portionSize &&\r\n            p.id >= (currentPage - 1) * portionSize + 1\r\n        )\r\n        .map((p) => (\r\n            <JsonPageItem key={p.id} id={p.userId} idNumber={p.id} title={p.title} />\r\n        ))}\r\n\r\n      <Paginator\r\n        portionSize={portionSize}\r\n        portionCount={count}\r\n        currentPage={currentPage}\r\n        setCurrentPage={setCurrentPage}\r\n      />\r\n    </div>\r\n  )\r\n})","import { useEffect } from \"react\";\r\nimport React from 'react';\r\n\r\nexport const Other = () => {\r\n console.log('new')\r\n  return (\r\n    <div>\r\n      <ul className=\"collapsible\">\r\n        <li>\r\n          <div className=\"collapsible-header\">\r\n            <i className=\"material-icons\">filter_drama</i>\r\n            First\r\n            <span className=\"new badge\">4</span>\r\n          </div>\r\n          <div className=\"collapsible-body\">\r\n            <p>Lorem ipsum dolor sit amet.</p>\r\n          </div>\r\n        </li>\r\n        <li>\r\n          <div className=\"collapsible-header\">\r\n            <i className=\"material-icons\">place</i>\r\n            Second\r\n            <span className=\"badge\">1</span>\r\n          </div>\r\n          <div className=\"collapsible-body\">\r\n            <p>Lorem ipsum dolor sit amet.</p>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n","import { coursesApi } from \"../api/api\"\r\nimport { coursesPageActions } from \"./actions\"\r\nimport { BaseThunkType, InferActionsTypes } from \"./store\"\r\nimport { CLEAR_COURSES, SET_COURSES, SET_COURSES_DATE, SET_IS_FETCHING, Valutes } from \"./types\"\r\n\r\n\r\n\r\nexport const initialState = {\r\n  date: '',\r\n  valutes: {} as Valutes || null,\r\n  isFetching: false\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\ntype ActionTypes = InferActionsTypes<typeof coursesPageActions>\r\ntype ThunkType = BaseThunkType<ActionTypes>\r\n\r\nexport const coursesPageReducer = (state = initialState, action: ActionTypes): InitialStateType => {\r\n  switch(action.type) {\r\n    case SET_COURSES: {\r\n      return {...state, valutes: action.payload}\r\n    }\r\n\r\n    case SET_COURSES_DATE: {\r\n      return {...state, date: action.payload}\r\n    }\r\n\r\n    case CLEAR_COURSES: {\r\n      return {...state, valutes: {}}\r\n    }\r\n\r\n    case SET_IS_FETCHING: {\r\n      console.log('isFetch')\r\n      return {...state, isFetching: action.isFetching}\r\n    }\r\n    default: \r\n      return {...state}\r\n  }\r\n}\r\n\r\n\r\n//-----------------------------------------------Thunks------------------------------------------\r\n\r\n\r\nexport const getCourses =  (selectedDate:string = ''):ThunkType => {\r\n  return async (dispatch, getState) => {\r\n    const data = await coursesApi.getCourses(selectedDate)\r\n    dispatch(coursesPageActions.setIsFetching(true))\r\n    if(!!data) {\r\n      dispatch(coursesPageActions.setCoursesDate(data.Date))\r\n      dispatch(coursesPageActions.setCourses(data.Valute))\r\n    } else {\r\n      console.error('No data!')\r\n      dispatch(coursesPageActions.clearCourses())\r\n      //@ts-ignore\r\n      window.M.toast({html: 'Данных нет'})\r\n    }\r\n    dispatch(coursesPageActions.setIsFetching(false))\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n","  //Преобразование строки для запроса\r\n  export const buildDateString = (date: string): string => {\r\n    return \"/archive/\" + date.split(\"-\").join(\"/\");\r\n  }\r\n\r\n  //Рисование стрелок\r\n  export const ArrowIcon: React.FC<{diff: number}> = ({ diff }) => {\r\n    if(diff < 0) {\r\n      return <>\r\n         <i className=\"material-icons red-text\">arrow_drop_down</i> \r\n      </>\r\n    }\r\n    return <>\r\n    <i className=\"material-icons green-text\">arrow_drop_up</i> \r\n    </>\r\n  }","import React from 'react';\r\nimport { dateOptions } from '../../../Redux/types';\r\n\r\ntype PropsType = {\r\n  selectedDate: string,\r\n  setSelectedDate: (selectedDate: string) => void,\r\n  date: string\r\n}\r\n\r\nexport const CoursePageCalendar:React.FC<PropsType> = ({selectedDate, setSelectedDate, date}) => {\r\n\r\n  const formatDate: any = new Date(Date.parse(date)).toLocaleString(\r\n    \"ru\",\r\n    dateOptions\r\n  )\r\n\r\n  return (\r\n    <div className=\"row\">\r\n          <div className=\"col s6\">\r\n            <p>\r\n              На дату: <strong>{formatDate}</strong>\r\n            </p>\r\n          </div>\r\n          <div className=\"input-field col s6\">\r\n            <p>Выберите дату: </p>\r\n            <input\r\n              placeholder=\"\"\r\n              id=\"dateStart\"\r\n              type=\"date\"\r\n              className=\"validate\"\r\n              name=\"dataStart\"\r\n              value={selectedDate}\r\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => setSelectedDate(e.currentTarget.value)}\r\n            />\r\n            <label htmlFor=\"dateStart\">Дата</label>\r\n          </div>\r\n        </div>\r\n  )\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { Valutes } from \"../../../Redux/types\";\r\n\r\ntype PropsType = {\r\n  valutes: Valutes,\r\n  valuteKeys: Array<string>,\r\n  selectedDate: string\r\n};\r\n\r\nexport const CoursePageExchange: React.FC<PropsType> = ({\r\n  valutes,\r\n  valuteKeys,\r\n  selectedDate\r\n}) => {\r\n  const [rublesAmount, setRublesAmount] = useState(\"\"); // кол-во рублей\r\n  const [valutesAmount, setValutesAmount] = useState(\"\"); // кол-во валюты\r\n  const [selectedValute, setSelectedValute] = useState(\"\"); // выбор валюты\r\n  const [valutesCourse, setValutesCourse] = useState({ course: 0, nominal: 1 });\r\n\r\n  const onSelectValuteChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n    setSelectedValute(e.target.value);\r\n    const key: string | undefined = valuteKeys.find((i) => valutes[i].Name === e.target.value);\r\n    if (key) {\r\n      setValutesCourse({\r\n        course: valutes[key].Value,\r\n        nominal: valutes[key].Nominal,\r\n      });\r\n    }\r\n  };\r\n\r\n  const onRublesUpdate = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setRublesAmount(e.target.value);\r\n  };\r\n\r\n  const calulateRublesAmount = (\r\n    rubles: number,\r\n    valute: { course: number; nominal: number }\r\n  ) => {\r\n    return ((rubles / valute.course) * valute.nominal).toFixed(2);\r\n  };\r\n\r\n  useEffect( () => {\r\n    setRublesAmount('')\r\n    setValutesAmount('')\r\n    setSelectedValute('')\r\n  }, [selectedDate])\r\n\r\n  useEffect(() => {\r\n    if (rublesAmount && selectedValute) {\r\n      setValutesAmount(\r\n        calulateRublesAmount(Number(rublesAmount), valutesCourse)\r\n      );\r\n    }\r\n  }, [rublesAmount, selectedValute, valutesCourse, valutes]);\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <input\r\n        placeholder=\"Кол-во рублей\"\r\n        value={rublesAmount}\r\n        onChange={onRublesUpdate}\r\n        className=\"col s3\"\r\n      />\r\n      <select\r\n        value={selectedValute}\r\n        onChange={onSelectValuteChange}\r\n        className=\"browser-default col s3\"\r\n      >\r\n        <option>Выберите валюту</option>\r\n        {valuteKeys.map((i) => {\r\n          const valuteName = valutes[i].Name;\r\n          return (\r\n            <option key={i} value={valuteName}>\r\n              {valuteName}\r\n            </option>\r\n          );\r\n        })}\r\n      </select>\r\n      <input placeholder=\"\" value={valutesAmount} readOnly className=\"col s3\" />\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { ArrowIcon } from \"../../common/utils\";\r\n\r\ntype PropsType = {\r\n  name: string;\r\n  value: number;\r\n  ticker: string;\r\n  nominal: number;\r\n  previousValue: number\r\n};\r\n\r\nexport const CoursePageTableItem: React.FC<PropsType> = ({\r\n  name,\r\n  value,\r\n  ticker,\r\n  nominal,\r\n  previousValue\r\n}) => {\r\n  const diff: number = +(previousValue - value).toFixed(2)\r\n\r\n  return (\r\n    <tr>\r\n      <td> {ticker} </td>\r\n      <td> {nominal} </td>\r\n      <td> {name} </td>\r\n      <td> <b> {(value).toFixed(2)} </b> </td>\r\n      <td> {(previousValue - value).toFixed(2)}</td>\r\n      <td><ArrowIcon diff={diff}/></td>\r\n    </tr>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { Valutes } from '../../../Redux/types';\r\nimport { CoursePageTableItem } from './CoursePageTableItem';\r\n\r\ntype PropTypes = {\r\n  valuteKeys: Array<string>,\r\n  valutes: Valutes\r\n}\r\n\r\nexport const CoursePageTable:React.FC<PropTypes> = ({valuteKeys, valutes}) => {\r\n  return (\r\n    <table className=\"striped\">\r\n          <thead>\r\n            <tr>\r\n              <th>Тикер</th>\r\n              <th>Номинал</th>\r\n              <th>Наименование</th>\r\n              <th>Рублей</th>\r\n            </tr>\r\n          </thead>\r\n\r\n          <tbody>\r\n            {valuteKeys.map((i) => {\r\n              return (\r\n                <CoursePageTableItem\r\n                  name={valutes[i].Name}\r\n                  value={valutes[i].Value}\r\n                  ticker={valutes[i].CharCode}\r\n                  nominal={valutes[i].Nominal}\r\n                  previousValue={valutes[i].Previous}\r\n                  key={valutes[i].ID}\r\n                />\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n  )\r\n}\r\n\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getCourses } from \"../../../Redux/coursesPageReducer\";\r\nimport { AppStateType } from \"../../../Redux/store\";\r\nimport { Valutes } from \"../../../Redux/types\";\r\nimport { Preloader } from \"../../common/Preloader\";\r\nimport { buildDateString } from \"../../common/utils\";\r\nimport { CoursePageCalendar } from \"./CoursePageCalendar\";\r\nimport { CoursePageExchange } from \"./CoursePageExchange\";\r\nimport { CoursePageTable } from \"./CoursePageTable\";\r\nimport styles from \"./CoursesPage.module.css\";\r\n\r\nexport const Courses = () => {\r\n  const dispatch = useDispatch();\r\n  const [selectedDate, setSelectedDate] = useState(\"\"); // выбранная дата\r\n  const valutes: Valutes = useSelector(\r\n    (state: AppStateType) => state.coursesPage.valutes\r\n  );\r\n  const date: string = useSelector(\r\n    (state: AppStateType) => state.coursesPage.date\r\n  );\r\n\r\n  const isFetching = useSelector(\r\n    (state: AppStateType) => state.coursesPage.isFetching\r\n  );\r\n\r\n  //Получение данных с сервера с заданной датой\r\n  const getCurrentCourses = () => {\r\n    selectedDate !== \"\"\r\n      ? dispatch(getCourses(buildDateString(selectedDate)))\r\n      : dispatch(getCourses());\r\n  }\r\n\r\n  useEffect(() => {\r\n    getCurrentCourses();\r\n  }, [selectedDate]);\r\n\r\n  const valuteKeys = Object.keys(valutes);\r\n\r\n  let renderView;\r\n  if (isFetching) {\r\n    renderView = <Preloader />\r\n\r\n  } else if (valuteKeys.length > 0) {\r\n    renderView = \r\n      <>\r\n        <CoursePageCalendar\r\n          selectedDate={selectedDate}\r\n          setSelectedDate={setSelectedDate}\r\n          date={date}\r\n        />\r\n        <CoursePageExchange\r\n          valutes={valutes}\r\n          valuteKeys={valuteKeys}\r\n          selectedDate={selectedDate}\r\n        />\r\n        <CoursePageTable valuteKeys={valuteKeys} valutes={valutes} />\r\n      </>\r\n    \r\n  } else {\r\n    renderView = \r\n      <>\r\n        <CoursePageCalendar\r\n          selectedDate={selectedDate}\r\n          setSelectedDate={setSelectedDate}\r\n          date={date}\r\n        />\r\n\r\n        <div className={styles.nodataText}>На выбранную дату нет данных</div>\r\n      </>\r\n    \r\n  }\r\n  return (\r\n    <>\r\n      <h4>Курс валют</h4>\r\n      {renderView}\r\n    </>\r\n  );\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport React from \"react\";\r\n\r\nexport const ByteToFloat = () => {\r\n  const buffer = new ArrayBuffer(4);\r\n  const f32 = new Float32Array(buffer);\r\n  const ui8 = new Uint8Array(buffer);\r\n\r\n  interface BytesInterface {\r\n    [key: string]: string\r\n  }\r\n  \r\n \r\n  const [byteArray, setByteArray] = useState({\r\n    'first_byte': '',\r\n    'second_byte': '',\r\n    'third_byte': '',\r\n    'fourth_byte': ''\r\n  })\r\n  let [floatNumber, setFloatNumber] = useState('')\r\n  let [isFloat, setIsFloat] = useState(false) \r\n\r\n\r\n  useEffect( () => {\r\n    if(isFloat) {\r\n      setBytesFromFloat()\r\n    }\r\n  }, [floatNumber])\r\n\r\n  useEffect( () => {\r\n    if(!isFloat) {\r\n      calculateFloat(byteArray)\r\n    }\r\n  }, [byteArray])\r\n\r\n\r\n// **********************************\r\n\r\n  function setBytes(e: React.ChangeEvent<HTMLInputElement>) {\r\n    setIsFloat(false)\r\n    setByteArray({\r\n      ...byteArray,\r\n      [e.target.id]: (e.target.value)\r\n    })\r\n  }\r\n\r\n  function calculateFloat(byteArray: BytesInterface) {\r\n    Object.keys(byteArray).forEach( (item, i) => {\r\n      ui8[i] =  parseInt(byteArray[item], 16)\r\n    })\r\n    let floatNumber = (+f32[0].toString(10)).toFixed(3)\r\n    setFloatNumber(floatNumber)\r\n  } \r\n\r\n  // *********************************\r\n\r\n  function setFloat(e:  React.ChangeEvent<HTMLInputElement>) {\r\n    setIsFloat(true)\r\n    setFloatNumber(e.target.value) \r\n    setBytesFromFloat()\r\n  }\r\n\r\n  function setBytesFromFloat() {\r\n    f32[0] = parseFloat(floatNumber)\r\n    setByteArray({\r\n      'first_byte': ui8[0].toString(16),\r\n      'second_byte': ui8[1].toString(16),\r\n      'third_byte': ui8[2].toString(16),\r\n      'fourth_byte': ui8[3].toString(16),\r\n    })\r\n  }\r\n \r\n   // *********************************\r\n\r\n\r\n  return (\r\n    <>\r\n      <h2 className=\"center\">Перевод byte во float</h2>\r\n      <div className=\"row\">\r\n        <form action=\"\" className=\"col s7 offset-s4\">\r\n          <div className=\"col s4\">\r\n            <p>Bytes:</p>\r\n            <input\r\n              placeholder=\"First byte HEX\"\r\n              id=\"first_byte\"\r\n              type=\"text\"\r\n              className=\"validate col s12\"\r\n              onChange = {setBytes}\r\n              value = {byteArray[\"first_byte\"]}\r\n            ></input>\r\n            <input\r\n              placeholder=\"Second byte HEX\"\r\n              id=\"second_byte\"\r\n              type=\"text\"\r\n              className=\"validate col s12\"\r\n              onChange = {setBytes}\r\n              value = {byteArray[\"second_byte\"]}\r\n            ></input>\r\n            <input\r\n              placeholder=\"Third byte HEX\"\r\n              id=\"third_byte\"\r\n              type=\"text\"\r\n              className=\"validate col s12\"\r\n              onChange = {setBytes}\r\n              value = {byteArray[\"third_byte\"]}\r\n            ></input>\r\n            <input\r\n              placeholder=\"Fourth byte HEX\"\r\n              id=\"fourth_byte\"\r\n              type=\"text\"\r\n              className=\"validate col s12\"\r\n              onChange = {setBytes}\r\n              value = {byteArray[\"fourth_byte\"]}\r\n            ></input>\r\n          </div>\r\n          <div className=\"col s4\">\r\n            <p>Float number: </p>\r\n            <input\r\n              placeholder=\"Float number\"\r\n              id=\"float_number\"\r\n              type=\"text\"\r\n              className=\"validate col s12\"\r\n              value={floatNumber}\r\n              onChange={setFloat}\r\n            ></input>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import 'materialize-css';\r\nimport React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport './App.css';\r\nimport { Navbar } from './components/Navbar/Navbar';\r\nimport { AppStateType } from './Redux/store';\r\nimport { useRoutes } from './Routes';\r\n\r\nexport const App = () => {\r\n\r\n\r\n  // -----------------------------Init material listener-----------------\r\n\r\n  document.addEventListener('DOMContentLoaded', function() {\r\n    var elems = document.querySelectorAll('.collapsible');\r\n    //@ts-ignore\r\n    var instances = M.Collapsible.init(elems, {})\r\n  })\r\n\r\n  //---------------------------------------------------------------------\r\n\r\n  const isAuth = useSelector( (state: AppStateType) => state.auth.isAuth)\r\n  const routes = useRoutes(isAuth)\r\n  return (\r\n    <div className=\"App container\">\r\n\r\n      {isAuth && <Navbar isAuth= {isAuth} />}\r\n      {routes}\r\n\r\n    </div>\r\n  )\r\n}\r\n","import { Route, Switch, Redirect } from 'react-router-dom';\r\nimport {LoginPage} from './components/Pages/Login/LoginPage'\r\nimport { JsonPage } from './components/Pages/Json/JsonPage';\r\nimport React from 'react';\r\nimport { Other } from './components/Pages/Other/Other';\r\nimport { Courses } from './components/Pages/Courses/CoursesPage';\r\nimport { ByteToFloat } from './components/Pages/ByteToFloat/ByteToFloat';\r\n\r\n\r\n\r\nexport const useRoutes = (isAuth: boolean ) => {\r\n\r\n  if (isAuth) {\r\n    return (\r\n      <Switch>\r\n        <Route path='/Json'><JsonPage/> </Route>\r\n        <Route path='/Courses'><div><Courses/></div></Route>\r\n        <Route path='/Byte2Float'><div><ByteToFloat/></div></Route>\r\n        <Route path='/Other'><div><Other /></div></Route>\r\n        <Redirect to=\"/Courses\"/>\r\n      </Switch>\r\n    )\r\n  }\r\n  return (\r\n    <Switch> \r\n      <Route path='/login'><LoginPage/> </Route>\r\n      <Redirect to='/login'></Redirect>\r\n    </Switch>\r\n  )\r\n} \r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { applyMiddleware, combineReducers, compose, createStore } from \"redux\";\r\nimport thunk, { ThunkAction } from \"redux-thunk\";\r\nimport { authReducer } from \"./authReducer\";\r\nimport { jsonPageReducer } from \"./jsonPageReducer\";\r\nimport {coursesPageReducer} from \"./coursesPageReducer\";\r\nimport {Action} from 'redux';\r\n\r\nconst reducers = combineReducers({\r\n  auth: authReducer,\r\n  jsonPage: jsonPageReducer,\r\n  coursesPage: coursesPageReducer\r\n})\r\n\r\nexport const store = createStore(reducers,\r\n  compose(\r\n    applyMiddleware(thunk),\r\n    //@ts-ignore\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__() : f => f\r\n    )\r\n  )\r\n  \r\ntype ReducersType = typeof reducers\r\nexport type AppStateType = ReturnType<ReducersType>\r\n\r\nexport type InferActionsTypes<T> = T extends { [key: string]: (...args: any[]) => infer U} ? U: never\r\nexport type BaseThunkType<A extends Action, R = Promise<void> | void > = ThunkAction<R, AppStateType, unknown, A>\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport {App} from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './Redux/store';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}